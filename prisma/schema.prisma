// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String   @unique
  username      String    @unique
  emailVerified DateTime?
  hashedPassword String?
  image         String?
  accounts      Account[]
  Posts         Post[]
}

model VerificationToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime 
  @@unique([email, token])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Post {
  id String @id  @default(cuid())
  word   String  @unique
  definition  String 
  examples String[]
  created_at DateTime @default(now())
  postedBy String
  posterUsername String
  user  User  @relation(fields: [postedBy], references: [id], onDelete: Cascade)
  spokenArea String
  like String[]
  dislike String[]
}